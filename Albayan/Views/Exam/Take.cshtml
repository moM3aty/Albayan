@model Albayan.ViewModels.TakeExamViewModel
@using Albayan.Helpers

@{
    ViewData["Title"] = $"اختبار: {Model.CourseTitle}";
}

<style>
    body {
        background-color: #0f172a;
        font-family: "Cairo", sans-serif;
        color: #f1f5f9;
        padding: 40px 0;
    }

    .quiz-container {
        max-width: 900px;
        margin: auto;
        background: #1e293b;
        border-radius: 20px;
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4);
        padding: 3rem;
        position: relative;
        overflow: hidden;
    }

    .heading h2.title {
        color: #0ea5e9;
        font-size: 2.5rem;
        font-weight: 800;
        text-align: center;
    }

    .heading .description {
        text-align: center;
        color: #94a3b8;
        margin-top: 0.5rem;
        font-size: 1rem;
    }

    .quiz-progress {
        margin-top: 2rem;
        margin-bottom: 2.5rem;
        border: 1px solid #334155;
        border-radius: 12px;
        padding: 1.2rem 1.5rem;
        background: #0f172a;
    }

    .progress-bar-custom {
        background-color: #334155;
        height: 14px;
        border-radius: 7px;
        overflow: hidden;
        position: relative;
    }

    .progress-bar-custom-inner {
        height: 100%;
        width: 0%;
        background: linear-gradient(to right, #38bdf8, #0ea5e9);
        border-radius: 7px;
        transition: width 0.5s ease-in-out;
    }

    .quiz-card {
        background-color: #1e293b;
        border: 1px solid #334155;
        border-radius: 18px;
        padding: 2rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease-in-out;
    }

    .question-header {
        font-size: 1.6rem;
        font-weight: 700;
        margin-bottom: 2rem;
        color: #f9fafb;
    }

    .option-label {
        display: block;
        background: #1f2937;
        border: 2px solid #475569;
        border-radius: 12px;
        padding: 1rem 1.5rem;
        margin-bottom: 1rem;
        color: #e2e8f0;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
    }

        .option-label:hover {
            background: #334155;
            border-color: #60a5fa;
        }

    .option-input {
        display: none;
    }

        .option-input:checked + .option-label {
            background-color: #38bdf8;
            color: #0f172a;
            font-weight: 700;
            border-color: #38bdf8;
            transform: scale(1.02);
            box-shadow: 0 0 0 3px rgba(56, 189, 248, 0.3);
        }

    .quiz-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 2.5rem;
    }

    .btn-quiz-nav {
        padding: 12px 36px;
        font-size: 1rem;
        border: none;
        border-radius: 12px;
        font-weight: 700;
        cursor: pointer;
        transition: 0.3s ease all;
    }

    .btn-next {
        background: linear-gradient(to right, #38bdf8, #0ea5e9);
        color: #0f172a;
    }

        .btn-next:hover {
            opacity: 0.9;
        }

    .btn-secondary {
        background: #475569;
        color: #e2e8f0;
    }

        .btn-secondary:hover {
            background: #334155;
        }
</style>

<section class="section-padding quiz-body">
    <div class="container">
        <div class="heading text-center mb-5">
            <h2 class="title">@ViewData["Title"]</h2>
            <p class="description">أجب على الأسئلة التالية لاجتياز الدورة.</p>
        </div>

        <div class="quiz-container">
            <div class="quiz-progress">
                <div class="d-flex justify-content-between small text-white mb-2">
                    <span>التقدم</span>
                    <span id="progress-text">السؤال ١ من @ArabicNumberHelper.ToArabicNumerals(Model.Questions.Count)</span>
                </div>
                <div class="progress-bar-custom">
                    <div class="progress-bar-custom-inner" id="progressBar"></div>
                </div>
            </div>

            <form asp-action="Submit" method="post" id="quizForm" class="quiz-form">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="CourseId" />

                <div>
                    @if (Model.Questions != null && Model.Questions.Any())
                    {
                        @for (int i = 0; i < Model.Questions.Count; i++)
                        {
                            var question = Model.Questions[i];
                            <div class="question-card" data-index="@i" style="@(i == 0 ? "" : "display:none;")">
                                <div class="question-header mb-4">
                                    @if (!string.IsNullOrEmpty(question.ImageUrl))
                                    {
                                        <img src="@Url.Content(question.ImageUrl)" class="img-fluid rounded mb-3" style="max-width: 600px;" />
                                    }
                                    else
                                    {
                                        <h3>@question.QuestionText</h3>
                                    }
                                </div>
                                <div class="mt-3">
                                    <div class="mb-2">
                                        <input type="radio" name="StudentAnswers[@question.Id]" id="q@(question.Id)oA" value="A" class="form-check-input option-input" required>
                                        <label for="q@(question.Id)oA" class="option-label">@question.OptionA</label>
                                    </div>
                                    <div class="mb-2">
                                        <input type="radio" name="StudentAnswers[@question.Id]" id="q@(question.Id)oB" value="B" class="form-check-input option-input">
                                        <label for="q@(question.Id)oB" class="option-label">@question.OptionB</label>
                                    </div>
                                    @if (question.NumberOfOptions >= 3 && !string.IsNullOrEmpty(question.OptionC))
                                    {
                                        <div class="mb-2">
                                            <input type="radio" name="StudentAnswers[@question.Id]" id="q@(question.Id)oC" value="C" class="form-check-input option-input">
                                            <label for="q@(question.Id)oC" class="option-label">@question.OptionC</label>
                                        </div>
                                    }
                                    @if (question.NumberOfOptions >= 4 && !string.IsNullOrEmpty(question.OptionD))
                                    {
                                        <div class="mb-2">
                                            <input type="radio" name="StudentAnswers[@question.Id]" id="q@(question.Id)oD" value="D" class="form-check-input option-input">
                                            <label for="q@(question.Id)oD" class="option-label">@question.OptionD</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-center text-danger">لا توجد أسئلة في هذا الاختبار حالياً.</p>
                    }
                </div>

                @if (Model.Questions != null && Model.Questions.Any())
                {
                    <div class="quiz-actions">
                        <button type="button" class="btn-quiz-nav btn-secondary" id="prevBtn" disabled>السابق</button>
                        <button type="button" class="btn-quiz-nav btn-next" id="nextBtn">التالي</button>
                        <button type="submit" class="btn-quiz-nav btn-success" id="submitBtn" style="display:none; background-color: #2ea043; color: white;">إنهاء الاختبار</button>
                    </div>
                }
            </form>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const questions = document.querySelectorAll('.question-card');
            if (questions.length === 0) return;

            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const submitBtn = document.getElementById('submitBtn');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progress-text');
            let currentIndex = 0;
            const totalQuestions = questions.length;

            function toArabicNumerals(str) {
                if (str === null || str === undefined) return '';
                return str.toString()
                    .replace(/0/g, '٠').replace(/1/g, '١').replace(/2/g, '٢')
                    .replace(/3/g, '٣').replace(/4/g, '٤').replace(/5/g, '٥')
                    .replace(/6/g, '٦').replace(/7/g, '٧').replace(/8/g, '٨')
                    .replace(/9/g, '٩');
            }

            function updateUI() {
                prevBtn.disabled = currentIndex === 0;
                if (currentIndex === totalQuestions - 1) {
                    nextBtn.style.display = 'none';
                    submitBtn.style.display = 'inline-block';
                } else {
                    nextBtn.style.display = 'inline-block';
                    submitBtn.style.display = 'none';
                }

                const progressPercentage = ((currentIndex + 1) / totalQuestions) * 100;
                progressBar.style.width = `${progressPercentage}%`;
                progressText.textContent = `السؤال ${toArabicNumerals(currentIndex + 1)} من ${toArabicNumerals(totalQuestions)}`;
            }

            function showQuestion(index) {
                questions.forEach((q, i) => {
                    q.style.display = (i === index) ? 'block' : 'none';
                });
                currentIndex = index;
                updateUI();
            }

            nextBtn.addEventListener('click', () => {
                if (currentIndex < totalQuestions - 1) {
                    showQuestion(currentIndex + 1);
                }
            });

            prevBtn.addEventListener('click', () => {
                if (currentIndex > 0) {
                    showQuestion(currentIndex - 1);
                }
            });

            showQuestion(0);
        });
    </script>
}
