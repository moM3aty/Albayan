@{
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString().ToLowerInvariant();
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - لوحة تحكم المنصة</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600;700&display=swap" rel="stylesheet">
    <link href="~/images/logo.png" rel="icon" type="image/x-icon" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body {
            font-family: 'Cairo',sans-serif;
            background-color: #0d1b2a;
            color: #e0e1dd
        }

        .main-bg {
            background-color: #0d1b2a
        }

        .sidebar-bg {
            background-color: #1b263b
        }

        .card-bg {
            background-color: #1b263b;
            border: 1px solid #415a77
        }

        .primary-btn {
            background-color: #3a86ff;
            color: #fff;
            transition: background-color .2s
        }

            .primary-btn:hover {
                background-color: #2a75e8
            }

        .secondary-btn {
            background-color: #415a77;
            color: #e0e1dd;
            transition: background-color .2s
        }

            .secondary-btn:hover {
                background-color: #526f94
            }

        .accent-color {
            color: #3a86ff
        }

        .input-style {
            background-color: #0d1b2a;
            border: 1px solid #415a77;
            color: #e0e1dd;
            border-radius: .5rem
        }

            .input-style:focus {
                outline: 0;
                border-color: #3a86ff;
                box-shadow: 0 0 0 2px rgba(58,134,255,.5)
            }

        .sidebar-link {
            transition: all .2s ease-in-out
        }

            .sidebar-link:hover, .sidebar-link.active {
                background-color: #415a77;
                color: #fff;
            }

            .sidebar-link.active {
                transform: translateX(-5px)
            }

        ::-webkit-scrollbar {
            width: 8px
        }

        ::-webkit-scrollbar-track {
            background: #1b263b
        }

        ::-webkit-scrollbar-thumb {
            background: #415a77;
            border-radius: 10px
        }

            ::-webkit-scrollbar-thumb:hover {
                background: #526f94
            }

        .modal-overlay {
            transition: opacity 0.3s ease;
        }

        .modal-content {
            transform: translateY(-20px) scale(0.95);
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        .modal-overlay.opacity-100 .modal-content {
            transform: translateY(0) scale(1);
        }
    </style>
</head>
<body class="main-bg">
    <div class="flex h-screen">
        <aside class="sidebar-bg w-64 min-h-screen flex flex-col p-4">
            <div class="text-center mb-10">
                <h1 class="text-2xl font-bold text-white">منصة البيان</h1>
                <p class="text-sm text-gray-400">لوحة التحكم</p>
            </div>
            <nav class="flex-grow">
                    <ul class="space-y-2">
                        <li><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "dashboard" ? "active" : "")"><i class="fas fa-tachometer-alt fa-fw ml-3"></i> الرئيسية</a></li>
                        <li><a asp-area="Admin" asp-controller="Stages" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "stages" ? "active" : "")"><i class="fas fa-layer-group fa-fw ml-3"></i> المراحل الدراسية</a></li>
                        <li><a asp-area="Admin" asp-controller="Grades" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "grades" ? "active" : "")"><i class="fas fa-graduation-cap fa-fw ml-3"></i> الصفوف الدراسية</a></li>
                        <li><a asp-area="Admin" asp-controller="Subjects" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "subjects" ? "active" : "")"><i class="fas fa-book fa-fw ml-3"></i> المواد الدراسية</a></li>
                        <li><a asp-area="Admin" asp-controller="EducationalMaterials" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "educationalmaterials" ? "active" : "")"><i class="fas fa-book-reader fa-fw ml-3"></i> سلسلة البيان</a></li>
                        <li><a asp-area="Admin" asp-controller="SalesOutlets" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "salesoutlets" ? "active" : "")"><i class="fas fa-store fa-fw ml-3"></i> منافذ البيع</a></li>
                        <li><a asp-area="Admin" asp-controller="Teachers" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "teachers" ? "active" : "")"><i class="fas fa-chalkboard-teacher fa-fw ml-3"></i> المعلمون</a></li>
                        <li><a asp-area="Admin" asp-controller="Students" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "students" ? "active" : "")"><i class="fas fa-user-graduate fa-fw ml-3"></i> الطلاب</a></li>
                        <li><a asp-area="Admin" asp-controller="Courses" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "courses" || new[] { "lessons", "exams", "questions" }.Contains(currentController) ? "active" : "")"><i class="fas fa-video fa-fw ml-3"></i> الدورات المسجلة</a></li>
                        <li><a asp-area="Admin" asp-controller="LiveLessons" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "livelessons" ? "active" : "")"><i class="fas fa-broadcast-tower fa-fw ml-3"></i> الدروس المباشرة</a></li>
                        <li><a asp-area="Admin" asp-controller="BlogPosts" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "blogposts" ? "active" : "")"><i class="fas fa-blog fa-fw ml-3"></i> المدونة</a></li>
                        <li><a asp-area="Admin" asp-controller="Certificates" asp-action="Index" class="sidebar-link flex items-center p-3 rounded-lg @(currentController == "certificates" ? "active" : "")"><i class="fas fa-certificate fa-fw ml-3"></i> الشهادات</a></li>
                    </ul>
            </nav>
            <div class="mt-auto">
                <form asp-area="Admin" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                    <a href="#" onclick="document.getElementById('logoutForm').submit();" class="sidebar-link flex items-center p-3 rounded-lg">
                        <i class="fas fa-sign-out-alt fa-fw ml-3"></i> تسجيل الخروج
                    </a>
                </form>
            </div>
        </aside>
        <main class="flex-1 p-8 overflow-y-auto">
            @RenderBody()
        </main>
    </div>

    <!-- Quick Add Modal -->
    <div id="quickAddModal" class="modal-overlay fixed inset-0 z-50 hidden opacity-0 flex items-center justify-center bg-black bg-opacity-70 p-4" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="modal-content w-full max-w-lg bg-gray-800 rounded-lg shadow-xl opacity-100">
            <div class="flex items-center justify-between p-4 border-b border-gray-600">
                <h3 class="text-xl font-semibold text-white" id="quickAddModalTitle"></h3>
                <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-600 hover:text-white rounded-lg text-sm p-1.5 mr-auto inline-flex items-center" data-modal-hide="quickAddModal">
                    <i class="fas fa-times w-5 h-5"></i>
                </button>
            </div>
            <div id="quickAddModalBody" class="p-6">
                <!-- AJAX content will be loaded here -->
            </div>
        </div>
    </div>

    @await RenderSectionAsync("Scripts", required: false)
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('quickAddModal');
            if (!modal) return;

            const modalTitle = document.getElementById('quickAddModalTitle');
            const modalBody = document.getElementById('quickAddModalBody');
            let sourceButton = null;

            const openModal = (title, url, button) => {
                sourceButton = button;
                modalTitle.textContent = title;
                modal.classList.remove('hidden');
                setTimeout(() => modal.classList.add('opacity-100'), 10);

                fetch(url)
                    .then(response => response.text())
                    .then(html => modalBody.innerHTML = html)
                    .catch(error => modalBody.innerHTML = '<p class="text-red-400">Error loading content.</p>');
            };

            const closeModal = () => {
                modal.classList.remove('opacity-100');
                setTimeout(() => {
                    modal.classList.add('hidden');
                    modalBody.innerHTML = '';
                    sourceButton = null;
                }, 300);
            };

            const displayValidationErrors = (form, errors) => {
                form.querySelectorAll('.field-validation-error').forEach(el => el.textContent = '');
                for (const key in errors) {
                    const el = form.querySelector(`[data-valmsg-for="${key}"]`);
                    if (el) {
                        el.textContent = errors[key];
                    }
                }
            };

            document.body.addEventListener('click', function(event) {
                const button = event.target.closest('.quick-add-btn');
                if (button) {
                    openModal(button.dataset.modalTitle, button.dataset.createUrl, button);
                }
                if (event.target.closest('[data-modal-hide="quickAddModal"]')) {
                    closeModal();
                }
            });

            modal.addEventListener('click', (event) => {
                if (event.target === modal) closeModal();
            });

            modalBody.addEventListener('submit', function(event) {
                const form = event.target.closest('form');
                if (form) {
                    event.preventDefault();
                    const submitButton = form.querySelector('button[type="submit"]');
                    const originalButtonText = submitButton.innerHTML;
                    submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> جار الحفظ...';
                    submitButton.disabled = true;

                    fetch(form.action, {
                        method: 'POST',
                        body: new FormData(form),
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'RequestVerificationToken': form.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                           throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            const dropdownId = sourceButton.dataset.dropdownId;
                            const dropdown = document.getElementById(dropdownId);
                            if (dropdown) {
                                const newOption = new Option(data.text, data.id, true, true);
                                dropdown.add(newOption);
                            }
                            closeModal();
                        } else {
                            displayValidationErrors(form, data.errors);
                        }
                    })
                    .catch(error => {
                        console.error('Error submitting form:', error);
                        alert('حدث خطأ غير متوقع. يرجى مراجعة الـ console لمزيد من التفاصيل.');
                    })
                    .finally(() => {
                        submitButton.innerHTML = originalButtonText;
                        submitButton.disabled = false;
                    });
                }
            });
             const pdfModal = document.getElementById('quickAddModal'); 
            const pdfModalTitle = document.getElementById('quickAddModalTitle');
            const pdfModalBody = document.getElementById('quickAddModalBody');

            document.body.addEventListener('click', function(event) {
            const previewButton = event.target.closest('button[title="معاينة PDF"]');
                if (previewButton) {
                    event.preventDefault();
                    const title = previewButton.dataset.modalTitle;
                    const pdfUrl = previewButton.dataset.createUrl; 

                    pdfModalTitle.textContent = title;
                    pdfModalBody.innerHTML = `<iframe src="${pdfUrl}" style="width: 100%; height: 75vh;" frameborder="0"></iframe>`;

                    pdfModal.classList.remove('hidden');
                    setTimeout(() => pdfModal.classList.add('opacity-100'), 10);
                }
            });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script>
        @if (User.Identity.IsAuthenticated)
        {
                <text>
                document.addEventListener("DOMContentLoaded", function () {
                    const connection = new signalR.HubConnectionBuilder()
                        .withUrl("/presenceHub")
                        .withAutomaticReconnect()
                        .build();

                    function start() {
                        connection.start().catch(err => {
                            console.error('SignalR Connection Error: ', err);
                            setTimeout(start, 5000); 
                        });
                    }

                    connection.onclose(async () => {
                        await start();
                    });

                    start();
                });
                </text>
        }
    </script>
</body>
</html>
